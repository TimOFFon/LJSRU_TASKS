/*
==========================================================
==========================================================
     Задачи LJSRU / параграф Встроенные прототипы
==========================================================
==========================================================
*/

/*-------- Добавить функциям метод "f.defer(ms)" ---------

Добавьте всем функциям в прототип метод defer(ms), 
который вызывает функции через ms миллисекунд.

После этого должен работать такой код:

function f() {
  alert("Hello!");
}

f.defer(1000); // выведет "Hello!" через 1 секунду
--------------------------------------------------------*/
{
  function f() {
    console.log("Hello!");
  }

  Function.prototype.defer = function (ms) {
    setTimeout(this, ms);
    // let t = setTimeout(()=> console.log("Hello!"), ms);
    // clearTimeout(t);
  };

  //   f.defer(1000);
}

/*--------------------------------------------------------
---- Добавьте функциям декорирующий метод "defer()" ------
----------------------------------------------------------

Добавьте всем функциям в прототип метод defer(ms), 
который возвращает обёртку, откладывающую вызов функции 
на ms миллисекунд.

Например, должно работать так:

function f(a, b) {
  alert( a + b );
}

f.defer(1000)(1, 2); // выведет 3 через 1 секунду.
Пожалуйста, заметьте, что аргументы должны корректно 
передаваться оригинальной функции.
*/
{
  function f(a, b) {
    console.log(a + b);
  }

//   Function.prototype.defer = function(ms) {
//     this.call().setTimeout(this, ms, ...arguments);
//   }

Function.prototype.defer = function(ms) {
    let f = this;
    return function(...args) {
      setTimeout(() => f.apply(this, args), ms);
    }
};

  f.defer(1000)(1, 2);
}
